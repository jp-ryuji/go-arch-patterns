// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CarsColumns holds the columns for the "cars" table.
	CarsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "model", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// CarsTable holds the schema information for the "cars" table.
	CarsTable = &schema.Table{
		Name:       "cars",
		Columns:    CarsColumns,
		PrimaryKey: []*schema.Column{CarsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cars_tenants_tenant",
				Columns:    []*schema.Column{CarsColumns[2]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CarOptionsColumns holds the columns for the "car_options" table.
	CarOptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// CarOptionsTable holds the schema information for the "car_options" table.
	CarOptionsTable = &schema.Table{
		Name:       "car_options",
		Columns:    CarOptionsColumns,
		PrimaryKey: []*schema.Column{CarOptionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "car_options_tenants_tenant",
				Columns:    []*schema.Column{CarOptionsColumns[2]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CompaniesColumns holds the columns for the "companies" table.
	CompaniesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "company_size", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// CompaniesTable holds the schema information for the "companies" table.
	CompaniesTable = &schema.Table{
		Name:       "companies",
		Columns:    CompaniesColumns,
		PrimaryKey: []*schema.Column{CompaniesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "companies_tenants_tenant",
				Columns:    []*schema.Column{CompaniesColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// IndividualsColumns holds the columns for the "individuals" table.
	IndividualsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "first_name", Type: field.TypeString, Nullable: true},
		{Name: "last_name", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// IndividualsTable holds the schema information for the "individuals" table.
	IndividualsTable = &schema.Table{
		Name:       "individuals",
		Columns:    IndividualsColumns,
		PrimaryKey: []*schema.Column{IndividualsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "individuals_tenants_tenant",
				Columns:    []*schema.Column{IndividualsColumns[4]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RentalsColumns holds the columns for the "rentals" table.
	RentalsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "starts_at", Type: field.TypeTime},
		{Name: "ends_at", Type: field.TypeTime},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "car_id", Type: field.TypeString},
		{Name: "renter_id", Type: field.TypeString},
	}
	// RentalsTable holds the schema information for the "rentals" table.
	RentalsTable = &schema.Table{
		Name:       "rentals",
		Columns:    RentalsColumns,
		PrimaryKey: []*schema.Column{RentalsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "rentals_tenants_tenant",
				Columns:    []*schema.Column{RentalsColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "rentals_cars_car",
				Columns:    []*schema.Column{RentalsColumns[4]},
				RefColumns: []*schema.Column{CarsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "rentals_renters_renter",
				Columns:    []*schema.Column{RentalsColumns[5]},
				RefColumns: []*schema.Column{RentersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RentalOptionsColumns holds the columns for the "rental_options" table.
	RentalOptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "count", Type: field.TypeInt},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "rental_id", Type: field.TypeString},
		{Name: "option_id", Type: field.TypeString},
	}
	// RentalOptionsTable holds the schema information for the "rental_options" table.
	RentalOptionsTable = &schema.Table{
		Name:       "rental_options",
		Columns:    RentalOptionsColumns,
		PrimaryKey: []*schema.Column{RentalOptionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "rental_options_tenants_tenant",
				Columns:    []*schema.Column{RentalOptionsColumns[2]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "rental_options_rentals_rental",
				Columns:    []*schema.Column{RentalOptionsColumns[3]},
				RefColumns: []*schema.Column{RentalsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "rental_options_car_options_option",
				Columns:    []*schema.Column{RentalOptionsColumns[4]},
				RefColumns: []*schema.Column{CarOptionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RentersColumns holds the columns for the "renters" table.
	RentersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "renter_entity_type", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "renter_entity_id", Type: field.TypeString, Nullable: true},
	}
	// RentersTable holds the schema information for the "renters" table.
	RentersTable = &schema.Table{
		Name:       "renters",
		Columns:    RentersColumns,
		PrimaryKey: []*schema.Column{RentersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "renters_tenants_tenant",
				Columns:    []*schema.Column{RentersColumns[2]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "renters_companies_company",
				Columns:    []*schema.Column{RentersColumns[3]},
				RefColumns: []*schema.Column{CompaniesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "renters_individuals_individual",
				Columns:    []*schema.Column{RentersColumns[3]},
				RefColumns: []*schema.Column{IndividualsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TenantsColumns holds the columns for the "tenants" table.
	TenantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "code", Type: field.TypeString, Unique: true},
	}
	// TenantsTable holds the schema information for the "tenants" table.
	TenantsTable = &schema.Table{
		Name:       "tenants",
		Columns:    TenantsColumns,
		PrimaryKey: []*schema.Column{TenantsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "tenant_code",
				Unique:  true,
				Columns: []*schema.Column{TenantsColumns[1]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CarsTable,
		CarOptionsTable,
		CompaniesTable,
		IndividualsTable,
		RentalsTable,
		RentalOptionsTable,
		RentersTable,
		TenantsTable,
	}
)

func init() {
	CarsTable.ForeignKeys[0].RefTable = TenantsTable
	CarOptionsTable.ForeignKeys[0].RefTable = TenantsTable
	CompaniesTable.ForeignKeys[0].RefTable = TenantsTable
	IndividualsTable.ForeignKeys[0].RefTable = TenantsTable
	RentalsTable.ForeignKeys[0].RefTable = TenantsTable
	RentalsTable.ForeignKeys[1].RefTable = CarsTable
	RentalsTable.ForeignKeys[2].RefTable = RentersTable
	RentalOptionsTable.ForeignKeys[0].RefTable = TenantsTable
	RentalOptionsTable.ForeignKeys[1].RefTable = RentalsTable
	RentalOptionsTable.ForeignKeys[2].RefTable = CarOptionsTable
	RentersTable.ForeignKeys[0].RefTable = TenantsTable
	RentersTable.ForeignKeys[1].RefTable = CompaniesTable
	RentersTable.ForeignKeys[2].RefTable = IndividualsTable
}
